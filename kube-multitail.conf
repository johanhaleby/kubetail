# Format of this file:
#
# include:configfile
#
# defaultcscheme:<name of colorscheme>
#             Selects the default color scheme to use. If this one is set, you
#             no longer need -cS/-CS.
#
# colorscheme:<name of colorscheme>
#             This name can be given for the commandline-parameter -cS. That
#             way, one can select what colorscheme to use for the next
#             logfile.
#
# cs_re:<color>:<regular expression>
#             This defines a regular expression to find a particular string.
#
#             color: [fg],[bg],[attribute[/otherattribute]][|other colorpair+attribute]
#             e.g.: red,,bold|red would give bold red for line 1 and just red for line 2, etc.
# Possible colors: red, green, yellow, blue, magenta, cyan and white.
#
#
# cs_re_s:<color>:<regular expression>
#             Like cs_re but only the substrings are used(!). E.g.:
#             ^....(...)...(...)
#             In the example above only what matches between '(' and ')' is
#             assigned a color. See the 'acctail' colorscheme for an example.
#
defaultcscheme:syslog
#
# This should be customized to your app needs.  See /usr/local/etc/multitail.conf for more
# examples.
# kubetail will use the colorscheme matching the pod name.
colorscheme:princess
# label
cs_re:cyan:^\[[a-z0-9_.-]*\]
# timestamp
cs_re:magenta:[0-9]{2}:[0-9]{2}:[0-9.]{6}
# request_id
cs_re:blue:request_id=[^ ]*
# loglevel
cs_re_s:red,,bold:\[(debug)\]
cs_re_s:red:\[(error)\]
cs_re_s:yellow:\[(warn)\]
cs_re_s:blue:\[(notice)\]
cs_re_s:green:\[(info)\]
# web action
cs_re_s:green:\] (Sent [23]0. in [0-9]*ms)
cs_re_s:red:\] (Sent [45][0-9][0-9] .*)
cs_re_s:cyan:\] (POST .*)
cs_re_s:cyan:\] (GET .*)
cs_re_s:cyan:\] (Fetch .*)
cs_re_s:yellow:\] (fetch .* retry .*)

